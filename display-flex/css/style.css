/* Formatação inicial */
body {
    background: #323232;
    font-size: 1.2rem;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    margin: 0 20% 0 20%;
}
h1 {
    color: #fff;
    text-align: center;
}
h2 {
    color: #fff;
    text-align: center;
    margin-top: 40px;
}
p {
    color: #fff;
    text-align: center;
}
.container {
    max-width: 400px;
    height: 300px;
    margin: 0 auto;
    border: 1px solid #fff;

}
.item {
    background: lightblue;
    margin: 5px;
    text-align: center;
    padding: 0 10px;
    /* flex: 1; */
}
/* Fim da formatação inicial */

/* Display Flex */
/* Todos os items filhos passarão a ter display:flex */
/* Os elementos ocuparão o espaço do seu conteúdo */
.flex {
    display: flex;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-item-1 {
    flex: 1;
}

/* Flex-Direction */
/* Os comportamentos de Flex-Direction devem ser aplicados no container */

/* Exibe os itens do container em linha (comportamento padrão) */
.row {
    flex-direction: row;
}

/* Inverte direção de exibição dos itens do container (em linha)*/
.row-reverse {
    flex-direction: row-reverse;
}

/* Exibe os itens do container em coluna  */
/* (normalmente usado em com media queries para ajustar responsividade em mobile). */
.column {
    flex-direction: column;
    min-height: 200px;
}

/* Inverte direção de exibição dos itens do container (em coluna)*/
.column-reverse {
    flex-direction: column-reverse;
}

/* Flex-Wrap */
/* É responsável pelo controle de quebra de linha no container */

/* Os itens podem exceder o tamanho do container (comportamento padrão). */
.no-wrap {
    flex-wrap: nowrap;
}

/* Os itens quebram de linha ao chegar no tamanho limite do container (comportamento desejável).*/
.wrap {
    flex-wrap: wrap;
}
/* Quando oso item alcança o tamanho limite do container,
eles são quebrado para a linha de cima ao invés da linha debaixo. */
.wrap-reverse {
    flex-wrap: wrap-reverse;
}

/* Justify-Content */
/* É responsável pela disposição dos itens dentro do container */

/* Os itens começam a ser exibidos no início do container (comportamento padrão) */
.flex-start {
    justify-content: flex-start;
}
/* Os itens começam a ser exibidos no final do container */
.flex-end {
    justify-content: flex-end;
}

/* Os itens são centralizados no container */
.center {
    justify-content: center;
}

/* Ocupa o tamanho inteiro do container, 
adicionando um espaçamento igual entre os itens. */
.space-between {
    justify-content: space-between;
}

/* Ocupa o tamanho inteiro do container, 
adicionando um espaçamento ao redor dos itens (apenas left e right, não afeta top e bottom).
* Obs. O espaçamento de dentro (entre um item e outro) é o dobro do espaçamento das laterais finais. */
.space-around {
    justify-content: space-around;
}

/* Flex-Stretch */
/* Todos os items do container acompanham a altura do maior item */

/*Faz com que os itens do container cresçam
             de acordo com o item de maior altura (comportamento padrão). */
.stretch {
    align-items: stretch;
}

/* Faz com que os itens do container ocupem apenas o tamanho do seu conteúdo
             e sejam exibidos no início do container (top) */
.a-i-flex-start {
    align-items: flex-start;
}

/* Faz com que os itens do container ocupem apenas o tamanho do seu conteúdo
             e sejam exibidos no final do container (bottom). */
.a-i-flex-end {
    align-items: flex-end;
}

/* Faz com que os itens do container ocupem apenas o tamanho do seu conteúdo
             e sejam exibidos no centro do container (center). */
.a-i-center {
    align-items: center;
}

/* Faz com que os itens do container ocupem apenas o tamanho do seu conteúdo
             e sejam alinhados de acordo com a linha base da tipografia. */
.a-i-baseline {
    align-items: baseline;
}
.item-baseline {
    padding-top: 30px;
}

/* 
*******************************************
Exemplo de alinhamento central com flexbox
*******************************************
*/
.alinhamento-central {
    height: 400px;
    justify-content: center;
    align-items: center;
}

/* Align-content */

.a-c-stretch {
    align-content: stretch;
}

.a-c-flex-start {
    align-content: flex-start;
}

.a-c-flex-end {
    align-content: flex-end;
}

.a-c-center {
    align-content: flex-end;
}

.a-c-space-between {
    align-content: space-between;
}

.a-c-space-around {
    align-content: space-around;
}


